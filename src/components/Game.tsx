import React, { useEffect, useState } from 'react';
import { GameBoard } from './GameBoard';
import { GameControls } from './GameControls';
import { GameSettings } from './GameSettings';
import { RecordsTable as Leaderboard } from './RecordsTable';
import { useGameStore } from '@/store/gameStore';
import Legend from './Legend';
import styles from './Game.module.css';

const Game: React.FC = () => {
  const {
    isPlaying,
    isGameOver,
    score,
    startGame, 
    isPaused,
    pauseGame,
    resumeGame,
    resetGame,
    isSettingsOpen, 
    isRecordsOpen,
    showLegend,
    settings,
    loadSettings,
    toggleSettings,
    toggleRecords,
    toggleLegend
  } = useGameStore();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  const [isMobile, setIsMobile] = useState(false);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ isMobile –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    const checkIfMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    checkIfMobile();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', checkIfMobile);
    
    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      window.removeEventListener('resize', checkIfMobile);
    };
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadSettings();
  }, [loadSettings]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
  const handleStartGame = () => {
    startGame();
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —Ñ–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const containerClasses = `${styles.gameContainer} ${styles[settings.environment]} ${settings.theme === 'dark' ? styles.dark : ''}`;

  return (
    <div className={containerClasses}>
      <div className={styles.header}>
        <h1 className={styles.gameTitle}>–ó–º–µ–π–∫–∞(Beta Version)</h1>
        <div className={styles.headerButtons}>
          <button onClick={toggleSettings} className={styles.iconButton} title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
            ‚öôÔ∏è
          </button>
          <button onClick={toggleRecords} className={styles.iconButton} title="–¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤">
            üèÜ
          </button>
          <button 
            onClick={toggleLegend} 
            className={`${styles.iconButton} ${showLegend ? styles.active : ''}`}
            title={showLegend ? "–°–∫—Ä—ã—Ç—å –ª–µ–≥–µ–Ω–¥—É" : "–ü–æ–∫–∞–∑–∞—Ç—å –ª–µ–≥–µ–Ω–¥—É"}
          >
            ‚ÑπÔ∏è
          </button>
        </div>
      </div>
      
      <div className={styles.boardBackground}>
        {/* –ü–∞–Ω–µ–ª—å –Ω–∞–¥ –∏–≥—Ä–æ–≤—ã–º –ø–æ–ª–µ–º */}
        <div className={isMobile ? styles.mobileGameControls : styles.desktopGameControls}>
          <div className={styles.scoreIndicator}>
            –°—á–µ—Ç: {score}
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
          {isMobile && (
            <div className={styles.mobileGameButtons}>
              {!isPlaying && !isGameOver && (
                <button 
                  onClick={handleStartGame} 
                  className={styles.mobileStartButton}
                >
                  –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                </button>
              )}

              {isPlaying && !isGameOver && (
                <button 
                  onClick={isPaused ? resumeGame : pauseGame}
                  className={styles.mobilePauseButton}
                >
                  {isPaused ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ü–∞—É–∑–∞'}
                </button>
              )}

              {isGameOver && (
                <button 
                  onClick={resetGame}
                  className={styles.mobileStartButton}
                >
                  –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
              )}
            </div>
          )}
        </div>
        
        <GameBoard />
      </div>
      
      {/* –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      {!isMobile && (
        <div className={styles.controlsPanel}>
          <GameControls onStartGame={handleStartGame} />
        </div>
      )}
      
      {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ */}
      {isMobile && <GameControls onStartGame={handleStartGame} />}
      
      {isSettingsOpen && <GameSettings />}
      {isRecordsOpen && <Leaderboard />}
      {showLegend && <Legend />}
    </div>
  );
};

export default Game; 