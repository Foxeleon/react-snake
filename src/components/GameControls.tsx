import React, { useEffect, useState } from 'react';
import { useGameStore } from '@/store/gameStore';
import styles from './GameControls.module.css';
import { Direction } from '@/types/game';

interface GameControlsProps {
  onStartGame: () => void;
}

export const GameControls: React.FC<GameControlsProps> = ({ onStartGame }) => {
  const {
    isPlaying,
    isGameOver,
    resetGame,
    isPaused,
    pauseGame,
    resumeGame,
    toggleLegend,
    toggleSettings,
    changeDirection,
    settings,
  } = useGameStore();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  const [isMobile, setIsMobile] = useState(false);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ isMobile –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    const checkIfMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    checkIfMobile();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', checkIfMobile);
    
    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      window.removeEventListener('resize', checkIfMobile);
    };
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  const handleDirectionClick = (direction: Direction) => {
    changeDirection(direction);
  };

  // –ö–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
  const themeClass = settings.theme === 'dark' ? styles.dark : '';

  // –ï—Å–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  if (isMobile) {
    return (
      <div className={`${styles.mobileControls} ${themeClass}`}>
        <div className={styles.mobileControlsContainer}>
          <div className={styles.touchControls}>
            <button
              className={styles.touchButton}
              onClick={() => handleDirectionClick('UP')}
              aria-label="–í–≤–µ—Ä—Ö"
            >
              ‚Üë
            </button>
            <div className={styles.middleRow}>
              <button
                className={styles.touchButton}
                onClick={() => handleDirectionClick('LEFT')}
                aria-label="–í–ª–µ–≤–æ"
              >
                ‚Üê
              </button>
              <button
                className={styles.touchButton}
                onClick={() => handleDirectionClick('RIGHT')}
                aria-label="–í–ø—Ä–∞–≤–æ"
              >
                ‚Üí
              </button>
            </div>
            <button
              className={styles.touchButton}
              onClick={() => handleDirectionClick('DOWN')}
              aria-label="–í–Ω–∏–∑"
            >
              ‚Üì
            </button>
          </div>
        </div>
      </div>
    );
  }

  // –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è
  return (
    <div className={`${styles.controls} ${themeClass}`}>
      {!isPlaying && !isGameOver && (
        <button 
          onClick={onStartGame} 
          className={styles.startButton}
          data-testid="start-button"
        >
          –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
        </button>
      )}

      {isPlaying && !isGameOver && (
        <button 
          onClick={isPaused ? resumeGame : pauseGame}
          className={styles.pauseButton}
        >
          {isPaused ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ü–∞—É–∑–∞'}
        </button>
      )}

      {isGameOver && (
        <div className={styles.gameOverControls}>
          <h2>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!</h2>
          <div className={styles.buttonGroup}>
            <button onClick={resetGame}>–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞</button>
          </div>
        </div>
      )}

      <div className={styles.additionalControls}>
        <button 
          onClick={toggleSettings}
          className={styles.controlButton}
          title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        >
          ‚öôÔ∏è
        </button>
        
        <button 
          onClick={toggleLegend}
          className={styles.controlButton}
          title="–õ–µ–≥–µ–Ω–¥–∞"
        >
          üìã
        </button>
      </div>

      <div className={styles.instructions}>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–º–µ–π–∫–æ–π</p>
      </div>
    </div>
  );
}; 